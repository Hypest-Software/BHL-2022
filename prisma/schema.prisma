datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

model Post {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String  @db.ObjectId
  published Boolean @default(false)
}

model FavoriteWaypoint {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  lat      Float
  lng      Float
  author   User?  @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  name             String?
  email            String?            @unique
  emailVerified    DateTime?
  image            String?
  balance          Float              @default(0.0)
  accounts         Account[]
  sessions         Session[]
  posts            Post[]
  FavoriteWaypoint FavoriteWaypoint[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
